{"version":3,"file":"ngx-images-loaded.js.map","sources":["ng://ngx-images-loaded/lib/ngx-images-loaded.service.ts","ng://ngx-images-loaded/lib/ngx-images-loaded.directive.ts","ng://ngx-images-loaded/lib/ngx-images-loaded.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxImagesLoadedService {\n\n  constructor() { }\n}\n","import { Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport imagesLoaded from 'imagesloaded';\n\n@Directive({\n  selector: '[libNgxImagesLoaded]'\n})\nexport class NgxImagesLoadedDirective implements OnInit, OnDestroy {\n  @Output()\n  always: EventEmitter<imagesLoaded> = new EventEmitter();\n\n  @Output()\n  done: EventEmitter<imagesLoaded> = new EventEmitter();\n\n  @Output()\n  fail: EventEmitter<imagesLoaded> = new EventEmitter();\n\n  @Output()\n  progress: EventEmitter<{\n    instance: imagesLoaded;\n    image: any;\n  }> = new EventEmitter();\n\n  private instance: imagesLoaded;\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    this.instance = imagesLoaded(\n      this.el.nativeElement,\n      null,\n      instance => {\n        this.always.emit(instance);\n      }\n    );\n    this.instance.on('always', instance => this.always.emit(instance));\n    this.instance.on('done', instance => this.done.emit(instance));\n    this.instance.on('fail', instance => this.fail.emit(instance));\n    this.instance.on('progress', (instance, image) =>\n      this.always.emit({ instance, image })\n    );\n  }\n\n  ngOnDestroy() {\n    this.instance.off('always', instance => this.always.emit(instance));\n    this.instance.off('done', instance => this.always.emit(instance));\n    this.instance.off('fail', instance => this.always.emit(instance));\n    this.instance.off('progress', (instance, image) =>\n      this.always.emit({ instance, image })\n    );\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxImagesLoadedService } from './ngx-images-loaded.service';\nimport { NgxImagesLoadedDirective } from './ngx-images-loaded.directive';\n\n@NgModule({\n  declarations: [NgxImagesLoadedDirective],\n  providers: [\n    NgxImagesLoadedService\n  ],\n  exports: [NgxImagesLoadedDirective]\n})\nexport class NgxImagesLoadedModule { }\n"],"names":[],"mappings":";;;;;;;AAAA;IAOE;KAAiB;;gBALlB,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;;iCAJD;CAEA;;;;;;ACFA;IAwBE,kCAAoB,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;QAhBlC,WAAM,GAA+B,IAAI,YAAY,EAAE,CAAC;QAGxD,SAAI,GAA+B,IAAI,YAAY,EAAE,CAAC;QAGtD,SAAI,GAA+B,IAAI,YAAY,EAAE,CAAC;QAGtD,aAAQ,GAGH,IAAI,YAAY,EAAE,CAAC;KAIc;;;;IAEtC,2CAAQ;;;IAAR;QAAA,iBAcC;QAbC,IAAI,CAAC,QAAQ,GAAG,YAAY,CAC1B,IAAI,CAAC,EAAE,CAAC,aAAa,EACrB,IAAI;;;;QACJ,UAAA,QAAQ;YACN,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAC5B,EACF,CAAC;QACF,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ;;;;QAAE,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAA,EAAC,CAAC;QACnE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM;;;;QAAE,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAA,EAAC,CAAC;QAC/D,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM;;;;QAAE,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAA,EAAC,CAAC;QAC/D,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,UAAU;;;;;QAAE,UAAC,QAAQ,EAAE,KAAK;YAC3C,OAAA,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,QAAQ,UAAA,EAAE,KAAK,OAAA,EAAE,CAAC;SAAA,EACtC,CAAC;KACH;;;;IAED,8CAAW;;;IAAX;QAAA,iBAOC;QANC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ;;;;QAAE,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAA,EAAC,CAAC;QACpE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM;;;;QAAE,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAA,EAAC,CAAC;QAClE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM;;;;QAAE,UAAA,QAAQ,IAAI,OAAA,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAA,EAAC,CAAC;QAClE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAU;;;;;QAAE,UAAC,QAAQ,EAAE,KAAK;YAC5C,OAAA,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,QAAQ,UAAA,EAAE,KAAK,OAAA,EAAE,CAAC;SAAA,EACtC,CAAC;KACH;;gBA9CF,SAAS,SAAC;oBACT,QAAQ,EAAE,sBAAsB;iBACjC;;;;gBALmB,UAAU;;;yBAO3B,MAAM;uBAGN,MAAM;uBAGN,MAAM;2BAGN,MAAM;;IAmCT,+BAAC;CAhDD;;;;;;ACHA;IAIA;KAOsC;;gBAPrC,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,wBAAwB,CAAC;oBACxC,SAAS,EAAE;wBACT,sBAAsB;qBACvB;oBACD,OAAO,EAAE,CAAC,wBAAwB,CAAC;iBACpC;;IACoC,4BAAC;CAPtC;;;;;;;;;;;;;;"}
