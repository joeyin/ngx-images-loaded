{"version":3,"sources":["ng://ngx-images-loaded/lib/ngx-images-loaded.service.ts","ng://ngx-images-loaded/lib/ngx-images-loaded.directive.ts","ng://ngx-images-loaded/lib/ngx-images-loaded.module.ts"],"names":["NgxImagesLoadedService","Injectable","args","providedIn","NgxImagesLoadedDirective","el","this","always","EventEmitter","done","fail","progress","prototype","ngOnInit","_this","instance","imagesLoaded","nativeElement","emit","on","image","ngOnDestroy","off","Directive","selector","ElementRef","Output","NgxImagesLoadedModule","NgModule","declarations","providers","exports"],"mappings":"wXAAA,IAAAA,EAAA,WAOE,SAAAA,gCALDC,EAAAA,WAAUC,KAAA,CAAC,CACVC,WAAY,sJAHd,GCAAC,EAAA,WAwBE,SAAAA,EAAoBC,GAAAC,KAAAD,GAAAA,EAhBpBC,KAAAC,OAAqC,IAAIC,EAAAA,aAGzCF,KAAAG,KAAmC,IAAID,EAAAA,aAGvCF,KAAAI,KAAmC,IAAIF,EAAAA,aAGvCF,KAAAK,SAGK,IAAIH,EAAAA,aA+BX,OAzBEJ,EAAAQ,UAAAC,SAAA,WAAA,IAAAC,EAAAR,KACEA,KAAKS,SAAWC,EACdV,KAAKD,GAAGY,cACR,KAAI,SACJF,GACED,EAAKP,OAAOW,KAAKH,KAGrBT,KAAKS,SAASI,GAAG,SAAQ,SAAEJ,GAAY,OAAAD,EAAKP,OAAOW,KAAKH,KACxDT,KAAKS,SAASI,GAAG,OAAM,SAAEJ,GAAY,OAAAD,EAAKL,KAAKS,KAAKH,KACpDT,KAAKS,SAASI,GAAG,OAAM,SAAEJ,GAAY,OAAAD,EAAKJ,KAAKQ,KAAKH,KACpDT,KAAKS,SAASI,GAAG,WAAU,SAAGJ,EAAUK,GACtC,OAAAN,EAAKP,OAAOW,KAAK,CAAEH,SAAQA,EAAEK,MAAKA,OAItChB,EAAAQ,UAAAS,YAAA,WAAA,IAAAP,EAAAR,KACEA,KAAKS,SAASO,IAAI,SAAQ,SAAEP,GAAY,OAAAD,EAAKP,OAAOW,KAAKH,KACzDT,KAAKS,SAASO,IAAI,OAAM,SAAEP,GAAY,OAAAD,EAAKP,OAAOW,KAAKH,KACvDT,KAAKS,SAASO,IAAI,OAAM,SAAEP,GAAY,OAAAD,EAAKP,OAAOW,KAAKH,KACvDT,KAAKS,SAASO,IAAI,WAAU,SAAGP,EAAUK,GACvC,OAAAN,EAAKP,OAAOW,KAAK,CAAEH,SAAQA,EAAEK,MAAKA,2BA5CvCG,EAAAA,UAASrB,KAAA,CAAC,CACTsB,SAAU,oEAJQC,EAAAA,8CAOjBC,EAAAA,qBAGAA,EAAAA,qBAGAA,EAAAA,yBAGAA,EAAAA,UAmCHtB,EAnDA,GCAAuB,EAAA,WAIA,SAAAA,KAOqC,2BAPpCC,EAAAA,SAAQ1B,KAAA,CAAC,CACR2B,aAAc,CAACzB,GACf0B,UAAW,CACT9B,GAEF+B,QAAS,CAAC3B,OAEyBuB,EAXrC","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxImagesLoadedService {\n\n  constructor() { }\n}\n","import { Directive, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport imagesLoaded from 'imagesloaded';\n\n@Directive({\n  selector: '[libNgxImagesLoaded]'\n})\nexport class NgxImagesLoadedDirective implements OnInit, OnDestroy {\n  @Output()\n  always: EventEmitter<imagesLoaded> = new EventEmitter();\n\n  @Output()\n  done: EventEmitter<imagesLoaded> = new EventEmitter();\n\n  @Output()\n  fail: EventEmitter<imagesLoaded> = new EventEmitter();\n\n  @Output()\n  progress: EventEmitter<{\n    instance: imagesLoaded;\n    image: any;\n  }> = new EventEmitter();\n\n  private instance: imagesLoaded;\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    this.instance = imagesLoaded(\n      this.el.nativeElement,\n      null,\n      instance => {\n        this.always.emit(instance);\n      }\n    );\n    this.instance.on('always', instance => this.always.emit(instance));\n    this.instance.on('done', instance => this.done.emit(instance));\n    this.instance.on('fail', instance => this.fail.emit(instance));\n    this.instance.on('progress', (instance, image) =>\n      this.always.emit({ instance, image })\n    );\n  }\n\n  ngOnDestroy() {\n    this.instance.off('always', instance => this.always.emit(instance));\n    this.instance.off('done', instance => this.always.emit(instance));\n    this.instance.off('fail', instance => this.always.emit(instance));\n    this.instance.off('progress', (instance, image) =>\n      this.always.emit({ instance, image })\n    );\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { NgxImagesLoadedService } from './ngx-images-loaded.service';\nimport { NgxImagesLoadedDirective } from './ngx-images-loaded.directive';\n\n@NgModule({\n  declarations: [NgxImagesLoadedDirective],\n  providers: [\n    NgxImagesLoadedService\n  ],\n  exports: [NgxImagesLoadedDirective]\n})\nexport class NgxImagesLoadedModule { }\n"]}